#N canvas 409 51 849 686 10;
#X obj 304 5 cnv 15 250 100 empty empty On/Off 5 10 0 14 -261234 -66577
0;
#X obj 322 46 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 322 66 \; pd dsp \$1;
#X obj 305 138 cnv 15 250 400 empty empty DSP-Section 5 10 0 14 -232576
-66577 0;
#X obj 35 137 cnv 15 250 350 empty empty Input-Section 5 10 0 14 -203904
-66577 0;
#X obj 33 5 cnv 15 250 120 empty empty Description 5 10 0 14 -228856
-66577 0;
#N canvas 90 309 450 265 macros-do-not-delete 0;
#N canvas 764 72 450 176 license-text 0;
#X text 20 13 Copyright ©  2017 \, Benjamin Fabricius \, Vanilla
Processors is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation \, either version 3 of the License \,
or any later version. This program is distributed in the hope that
it will be useful \, but WITHOUT ANY WARRANTY \; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
the GNU General Public License for more details.;
#X restore 15 16 pd license-text;
#X msg 15 61 1;
#X msg 15 83 \; pd-license-text vis \$1;
#X obj 15 39 r open-license-txt!;
#X connect 1 0 2 0;
#X connect 3 0 1 0;
#X restore 684 649 pd macros-do-not-delete;
#X obj 577 653 bng 15 250 50 0 open-license-txt! empty empty 17 7 0
10 -262144 -1 -1;
#X obj 592 653 bng 15 250 50 0 open-license-txt! empty empty 17 7 0
10 -262144 -1 -1;
#X obj 608 653 bng 15 250 50 0 open-license-txt! empty empty 17 7 0
10 -262144 -1 -1;
#X obj 623 653 bng 15 250 50 0 open-license-txt! empty empty 17 7 0
10 -262144 -1 -1;
#X obj 574 648 cnv 15 100 20 empty empty License-Text 15 10 0 10 -233017
-66577 0;
#X obj 37 647 cnv 15 250 35 empty empty empty 15 10 0 10 -233017 -66577
0;
#X text 41 647 Copyright © 2017 \, Benjamin Fabricius;
#X text 41 662 Happy Thoughts Audio - htaudio.de;
#X text 41 29 16 Bit INT bitcrusher stage;
#X text 41 49 Reduce the bit depth of samples by true integer rounding
with wrap~ in order to achieve bitcrushing fx. This bitcrusher supports
bitcrushing with depths of 1-16 bits of depth., f 37;
#X obj 67 190 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 12700 1;
#X obj 64 220 normtorange 16 1;
#X floatatom 64 264 5 0 0 0 - - -, f 5;
#X obj 64 283 s \$0-calc-bits;
#X obj 64 242 ftoint-wrap;
#X text 44 190 1;
#X text 204 190 16;
#X obj 64 379 sinosc~;
#X floatatom 64 354 5 0 127 0 - - -, f 5;
#X text 100 353 Pitch;
#X floatatom 117 381 5 0 0 0 - - -, f 5;
#X text 153 381 Hz;
#X obj 64 451 s~ \$0-inp;
#X text 45 168 1: Bit Depth;
#X text 50 331 2: Test Sine;
#X obj 575 6 cnv 15 250 200 empty empty Calc-Helper-Section 5 10 0
14 -204786 -66577 0;
#X obj 588 68 r \$0-calc-bits;
#X obj 588 137 <<;
#X msg 588 90 1 \$1;
#X obj 588 112 unpack f f;
#X floatatom 588 159 5 0 0 0 - - -, f 5;
#X obj 588 178 s \$0-calc-steps;
#X text 584 32 Calculate new quantization steps using bit depth, f
38;
#X obj 321 181 r~ \$0-inp;
#X obj 443 181 r \$0-calc-steps;
#X obj 443 203 sig~;
#X obj 380 230 *~;
#X obj 406 263 wrap~;
#X obj 430 349 /~;
#X obj 380 304 -~;
#X obj 426 440 dac~;
#X obj 430 386 *~ 0;
#X obj 356 369 i 1;
#X obj 381 369 i 0;
#X obj 356 349 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 381 348 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 308 351 Output On/Off, f 6;
#X obj 146 418 *~ 0;
#X obj 182 401 i 1;
#X obj 207 401 i 0;
#X obj 182 381 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 207 380 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 240 384 Input On/Off, f 6;
#X obj 576 224 cnv 15 250 400 empty empty Visualization-Section 5 10
0 14 -228856 -66577 0;
#X obj 589 310 sidekik-scope;
#X obj 589 280 r~ \$0-inp;
#X obj 341 442 s~ \$0-outp;
#X obj 590 455 r~ \$0-outp;
#X obj 590 485 sidekik-scope;
#X text 585 252 Input Signal;
#X text 584 431 Output Signal;
#X obj 146 450 dac~;
#X connect 1 0 2 0;
#X connect 17 0 18 0;
#X connect 18 0 21 0;
#X connect 19 0 20 0;
#X connect 21 0 19 0;
#X connect 24 0 54 0;
#X connect 24 0 29 0;
#X connect 24 1 27 0;
#X connect 25 0 24 0;
#X connect 33 0 35 0;
#X connect 34 0 37 0;
#X connect 35 0 36 0;
#X connect 36 0 34 0;
#X connect 36 1 34 1;
#X connect 37 0 38 0;
#X connect 40 0 43 0;
#X connect 41 0 42 0;
#X connect 42 0 43 1;
#X connect 42 0 45 1;
#X connect 43 0 44 0;
#X connect 43 0 46 0;
#X connect 44 0 46 1;
#X connect 45 0 48 0;
#X connect 46 0 45 0;
#X connect 48 0 47 0;
#X connect 48 0 47 1;
#X connect 48 0 63 0;
#X connect 49 0 48 1;
#X connect 50 0 48 1;
#X connect 51 0 49 0;
#X connect 52 0 50 0;
#X connect 54 0 68 0;
#X connect 54 0 68 1;
#X connect 55 0 54 1;
#X connect 56 0 54 1;
#X connect 57 0 55 0;
#X connect 58 0 56 0;
#X connect 62 0 61 0;
#X connect 64 0 65 0;
