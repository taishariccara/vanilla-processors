#N canvas 0 70 1114 695 10;
#X obj 304 5 cnv 15 250 100 empty empty On/Off 5 10 0 14 -261234 -66577
0;
#X obj 322 43 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 322 66 \; pd dsp \$1;
#X obj 305 138 cnv 15 250 480 empty empty DSP-Section 5 10 0 14 -232576
-66577 0;
#X obj 35 167 cnv 15 250 350 empty empty Input-Section 5 10 0 14 -203904
-66577 0;
#X obj 34 5 cnv 15 250 150 empty empty Description 5 10 0 14 -228856
-66577 0;
#N canvas 90 309 450 265 macros-do-not-delete 0;
#N canvas 764 72 450 176 license-text 0;
#X text 20 13 Copyright ©  2017 \, Benjamin Fabricius \, Vanilla
Processors is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation \, either version 3 of the License \,
or any later version. This program is distributed in the hope that
it will be useful \, but WITHOUT ANY WARRANTY \; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
the GNU General Public License for more details.;
#X restore 15 16 pd license-text;
#X msg 15 61 1;
#X msg 15 83 \; pd-license-text vis \$1;
#X obj 15 39 r open-license-txt!;
#X connect 1 0 2 0;
#X connect 3 0 1 0;
#X restore 414 638 pd macros-do-not-delete;
#X obj 307 642 bng 15 250 50 0 open-license-txt! empty empty 17 7 0
10 -262144 -1 -1;
#X obj 332 637 bng 15 250 50 0 open-license-txt! empty empty 17 7 0
10 -262144 -1 -1;
#X obj 348 637 bng 15 250 50 0 open-license-txt! empty empty 17 7 0
10 -262144 -1 -1;
#X obj 363 637 bng 15 250 50 0 open-license-txt! empty empty 17 7 0
10 -262144 -1 -1;
#X obj 304 637 cnv 15 100 20 empty empty License-Text 15 10 0 10 -233017
-66577 0;
#X obj 35 637 cnv 15 250 35 empty empty empty 15 10 0 10 -233017 -66577
0;
#X text 39 637 Copyright © 2017 \, Benjamin Fabricius;
#X text 39 652 Happy Thoughts Audio - htaudio.de;
#X obj 64 379 sinosc~;
#X floatatom 64 354 5 0 127 0 - - -, f 5;
#X text 100 353 Pitch;
#X floatatom 117 381 5 0 0 0 - - -, f 5;
#X text 153 381 Hz;
#X obj 64 451 s~ \$0-inp;
#X text 50 331 2: Test Sine;
#X obj 575 6 cnv 15 250 600 empty empty Calc-Helper-Section 5 10 0
14 -204786 -66577 0;
#X obj 321 181 r~ \$0-inp;
#X obj 322 460 dac~;
#X obj 321 406 *~ 0;
#X obj 486 389 i 1;
#X obj 511 389 i 0;
#X obj 486 369 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 511 368 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 438 371 Output On/Off, f 6;
#X obj 146 418 *~ 0;
#X obj 182 401 i 1;
#X obj 207 401 i 0;
#X obj 182 381 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 207 380 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 240 384 Input On/Off, f 6;
#X obj 848 5 cnv 15 250 400 empty empty Visualization-Section 5 10
0 14 -228856 -66577 0;
#X obj 861 91 sidekik-scope;
#X obj 862 236 r~ \$0-outp;
#X obj 862 266 sidekik-scope;
#X obj 146 450 dac~;
#X obj 99 228 hsl 128 15 0 0.5 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 1800 1;
#X floatatom 96 248 5 0 0 0 - - -, f 5;
#X obj 96 280 s \$0-calc-srramt;
#X text 232 227 hi rate;
#X text 43 227 lo rate;
#X text 46 198 1: Sample Rate (to downsample to);
#X text 133 248 Hz;
#X obj 321 225 lop~ 2000;
#X obj 321 251 lop~ 2000;
#X obj 321 288 samphold~;
#X obj 321 340 lop~ 2000;
#X obj 321 362 lop~ 2000;
#X obj 703 88 loadbang;
#X obj 703 110 sr;
#X floatatom 703 172 5 0 0 0 - - -, f 5;
#X obj 670 224 sr-div;
#X floatatom 670 252 5 0 0 0 - - -, f 5;
#X obj 725 237 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 703 132 i 11025;
#X obj 582 160 r \$0-calc-srramt;
#X text 724 253 clk rate in Hz;
#X obj 613 431 clockwerk~;
#X obj 719 340 r pd-dsp-started;
#X obj 680 312 r pd-dsp-stopped;
#X msg 719 362 1;
#X msg 680 334 0;
#X obj 613 453 s~ \$0-aud-clk;
#X obj 463 235 r~ \$0-aud-clk;
#X text 459 217 Clk Inp;
#X text 706 454 Send to Clk Inp;
#X text 584 32 Generate an audio clock signal to use to trigger the
sample and hold unit, f 39;
#X obj 861 59 r~ \$0-aud-clk;
#X text 857 33 Sample clock generated by clockwerk~;
#X text 856 212 Downsampled output signal;
#X obj 420 441 s~ \$0-outp;
#X text 419 464 Send to Outp Scope;
#X text 41 29 Audio Sample Rate Redux Unit;
#X text 41 48 Use a sample and hold object to reduce the sample rate
of the audio input causing the output to be distorted (ADD INFO ON
DIST HERE). The S&H object is triggered by a clock at audio rate equivalent
to the selected Sample Rate to reduce to in Hz., f 39;
#X text 384 220 Optional Inp Filter, f 8;
#X text 382 335 Optional Outp Filter, f 8;
#X connect 1 0 2 0;
#X connect 15 0 31 0;
#X connect 15 0 20 0;
#X connect 15 1 18 0;
#X connect 16 0 15 0;
#X connect 23 0 49 0;
#X connect 25 0 24 0;
#X connect 25 0 24 1;
#X connect 26 0 25 1;
#X connect 27 0 25 1;
#X connect 28 0 26 0;
#X connect 29 0 27 0;
#X connect 31 0 41 0;
#X connect 31 0 41 1;
#X connect 32 0 31 1;
#X connect 33 0 31 1;
#X connect 34 0 32 0;
#X connect 35 0 33 0;
#X connect 39 0 40 0;
#X connect 42 0 43 0;
#X connect 43 0 44 0;
#X connect 49 0 50 0;
#X connect 50 0 51 0;
#X connect 51 0 52 0;
#X connect 52 0 53 0;
#X connect 53 0 25 0;
#X connect 53 0 76 0;
#X connect 54 0 55 0;
#X connect 55 0 60 0;
#X connect 56 0 57 2;
#X connect 57 0 58 0;
#X connect 58 0 63 1;
#X connect 59 0 58 0;
#X connect 60 0 56 0;
#X connect 61 0 57 0;
#X connect 63 0 68 0;
#X connect 64 0 66 0;
#X connect 65 0 67 0;
#X connect 66 0 63 0;
#X connect 67 0 63 0;
#X connect 69 0 51 1;
#X connect 73 0 38 0;
